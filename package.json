{
	"name": "theme-pink-candy",
	"displayName": "Pink Candy Theme",
	"description": "A vivid colour scheme with a pink accent, in both light and dark variants.",
	"version": "1.5.0",
	"publisher": "kuba-p",
	"author": {
		"name": "kuba_p"
	},
	"license": "MIT",
	"icon": "icon.png",
	"homepage": "https://github.com/KubaP/vscode-pink-candy/blob/master/README.md",
	"repository": {
		"type": "git",
		"url": "https://github.com/KubaP/vscode-pink-candy"
	},
	"bugs": {
		"url": "https://github.com/KubaP/vscode-pink-candy/issues"
	},
	"galleryBanner": {
		"color": "#22222A",
		"theme": "dark"
	},
	"markdown": "github",
	"engines": {
		"vscode": "^1.67.0"
	},
	"categories": [
		"Themes"
	],
	"keywords": [
		"color",
		"theme",
		"color-theme",
		"highlighting",
		"light",
		"dark"
	],
	"activationEvents": [
		"onStartupFinished"
	],
	"main": "./out/extension.js",
	"capabilities": {
		"untrustedWorkspaces": {
			"supported": true
		}
	},
	"contributes": {
		"themes": [
			{
				"label": "Pink Candy Light",
				"uiTheme": "vs",
				"path": "./themes/pink-candy-light.json"
			},
			{
				"label": "Pink Candy Dark",
				"uiTheme": "vs-dark",
				"path": "./themes/pink-candy-dark.json"
			},
			{
				"label": "Pink Candy Dark Warm",
				"uiTheme": "vs-dark",
				"path": "./themes/pink-candy-dark-warm.json"
			}
		],
		"commands": [
			{
				"command": "theme-pink-candy.restoreDefaultConfig",
				"title": "Pink Candy: Restore default configuration"
			}
		],
		"configuration": {
			"title": "Pink Candy Theme",
			"properties": {
				"theme-pink-candy.mutedMarkdownPlaintext": {
					"type": "boolean",
					"scope": "application",
					"default": false,
					"description": "Controls whether markdown plaintext has a muted appearance.",
					"markdownDeprecationMessage": "Deprecated; use `#theme-pink-candy.markdownSyntaxStyle#` instead.",
					"deprecationMessage": "Deprecated; use `theme-pink-candy.markdownSyntaxStyle` instead."
				},
				"theme-pink-candy.markdownSyntaxStyle": {
					"type": "string",
					"scope": "application",
					"default": "traditional",
					"markdownDescription": "Controls the syntax colour scheme for markdown.\r\nNote that this overrides the deprecated `#theme-pink-candy.mutedMarkdownPlaintext#` key.",
					"description": "Controls the syntax colour scheme for markdown. Note that this overrides the deprecated `theme-pink-candy.mutedMarkdownPlaintext` key.",
					"enum": [
						"traditional",
						"mutedPlaintext",
						"alternate"
					],
					"enumItemLabels": [
						"Traditional",
						"Muted plaintext",
						"Alternate"
					],
					"markdownEnumDescriptions": [
						"The colour scheme that shipped with the initial release of this theme; this is the *default* option.",
						"The default colour scheme, **but** plaintext has a muted appearance.",
						"An alternate colour scheme that emphasizes semantic meaning and de-emphasizes markdown control characters."
					],
					"enumDescriptions": [
						"The colour scheme that shipped with the initial release of this theme; this is the default option.",
						"The default colour scheme, but plaintext has a muted appearance.",
						"An alternate colour scheme that emphasizes semantic meaning and de-emphasizes markdown control characters."
					]
				},
				"theme-pink-candy.italicizedComments": {
					"type": "boolean",
					"scope": "application",
					"default": false,
					"description": "Controls whether comments are italicized."
				},
				"theme-pink-candy.alternateCurrentLineStyle": {
					"type": "boolean",
					"scope": "application",
					"default": false,
					"description": "Controls whether the current-line uses an alternate appearance (outline rather than transparent background fill)."
				},
				"theme-pink-candy.monochromeBracketPairGuides": {
					"type": "boolean",
					"scope": "application",
					"default": false,
					"description": "Controls whether bracket pair guides are monochrome."
				},
				"theme-pink-candy.inlayHintStyle": {
					"type": "string",
					"scope": "application",
					"default": "noBackground",
					"description": "Controls the appearance of inlay hints.",
					"enum": [
						"noBackground",
						"faintBackground",
						"accent",
						"accentBackground"
					],
					"enumItemLabels": [
						"No background",
						"Faint background",
						"Accent",
						"Accent with background"
					],
					"markdownEnumDescriptions": [
						"No background behind the inlay hint; this is the *default* option.",
						"A lightly shaded background behind the inlay hint.",
						"An accent colour for the inlay hint text, with no background.",
						"An accent colour for the inlay hint text and a lightly shaded background."
					],
					"enumDescriptions": [
						"No background behind the inlay hint; this is the default option.",
						"A lightly shaded background behind the inlay hint.",
						"An accent colour for the inlay hint text, with no background.",
						"An accent colour for the inlay hint text and a lightly shaded background."
					]
				},
				"theme-pink-candy.globalAccent": {
					"type": "string",
					"scope": "application",
					"default": "default",
					"description": "Controls where the accent colours are used.",
					"enum": [
						"default",
						"disabledStatusBar",
						"minimal"
					],
					"enumItemLabels": [
						"Everywhere",
						"Disabled on status bar",
						"Minimal"
					],
					"markdownEnumDescriptions": [
						"The accent colours are used everywhere; this is the *default* option.",
						"The accent colours are used everywhere **but** on the status bar.",
						"The accent colours are used only in a select few cases, such as buttons, links, important text, small decorations, etc."
					],
					"enumDescriptions": [
						"The accent colours are used everywhere; this is the default option.",
						"The accent colours are used everywhere but on the status bar.",
						"The accent colours are used only in a select few cases, such as buttons, links, important text, small decorations, etc."
					]
				}
			}
		}
	},
	"scripts": {
		"buildTheme": "node ./build/buildTheme.js",
		"buildTs": "tsc -p ./",
		"watchTs": "tsc -watch -p ./",
		"package": "vsce package",
		"publish": "vsce publish -p",
		"postPublish": "node -e \"const version = require('./package.json').version; console.log(`##vso[task.setvariable variable=version;isOutput=true]${version}`);\""
	},
	"devDependencies": {
		"@types/glob": "^7.1.4",
		"@types/mocha": "^9.0.0",
		"@types/node": "14.x",
		"@types/vscode": "^1.67.0",
		"@vscode/test-electron": "^1.6.2",
		"@vscode/vsce": "2.16.0",
		"chokidar": "^3.5.3",
		"glob": "^7.1.7",
		"jimp": "^0.16.1",
		"mocha": "^9.1.1",
		"typescript": "^4.4.3"
	}
}
