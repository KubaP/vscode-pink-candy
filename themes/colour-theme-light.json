{
	"name": "colour-theme",
	"type": "light",
	"colors": {
		// EDITOR
		// Basics
		"editor.foreground": "#565869",
		"editor.background": "#FAFBFC",
		"errorForeground": "#FF1277",
		//
		// Cursor/line
		"editorCursor.foreground": "#FF1277",
		"editorCursor.background": "#fff", // Colour of a character when using block cursor.
		"editor.lineHighlightBackground": "#00000007", // Current line background colour.
		"editor.lineHighlightBorder": "#00000000", // Remove current line border.
		"editorLineNumber.foreground": "#ADB1C2", // Line number colour in the gutter.
		"editorLineNumber.activeForeground": "#FF1277", // Current line number colour in the gutter.
		"editor.foldBackground": "#00000007", // Colour of a line containing a folded range.
		"editor.hoverHighlightBackground": "#00000007", // Background when hovering over a symbol.
		//
		// Text selection boxes/ranges
		"editor.selectionBackground": "#FF12771a", // Background of selected text.
		//"editor.selectionForeground": "",
		"editor.inactiveSelectionBackground": "#FF127710", // Background of selection when editor not focused.
		"editor.selectionHighlightBackground": "#FF12771a", // Background of matching text.
		//"editor.selectionHighlightBorder": "",
		//
		// Symbol selection boxes/ranges
		"editor.wordHighlightBackground": "#FF12771a", // Background for selected symbol.
		//"editor.wordHighlightBorder": "",
		"editor.wordHighlightStrongBackground": "#FF12771a", // Background of matching symbol.
		//"editor.wordHighlightStrongBorder": "",
		//
		// Search highlight boxes
		"editor.findMatchBackground": "#00000000", // Currently selected found match.
		"editor.findMatchBorder": "#2faf648a",
		"editor.findMatchHighlightBackground": "#eff3283a", // Other found matches.
		//"editor.findMatchHighlightBorder": "",
		"editor.findRangeHighlightBackground": "#FF127710", // Colour of the range of the current search.
		//"editor.findRangeHighlightBorder": "",
		//
		// Within the "search editor"
		"searchEditor.findMatchBackground": "#eff3283a",
		"searchEditor.findMatchBorder": "#2faf648a",
		//"searchEditor.textInputBorder": "",
		//
		// Highlight colour of line containing found matching text.
		"editor.rangeHighlightBackground": "#eff3283a",
		//"editor.rangeHighlightBorder": "",
		"editor.symbolHighlightBackground": "#eff3283a", // ???
		//"editor.symbolHighlightBorder": "",
		//
		// Matching brackets
		"editorBracketMatch.border": "#777777", // Border around matching brackets.
		"editorBracketMatch.background": "#00000000", // Remove match background.
		//
		// Bracket pair colours
		"editorBracketHighlight.foreground1": "#2faf64",
		"editorBracketHighlight.foreground2": "#00b7e4",
		"editorBracketHighlight.foreground3": "#a8759a",
		"editorBracketHighlight.foreground4": "#CF9C00",
		"editorBracketHighlight.foreground5": "#FF5C57",
		"editorBracketHighlight.foreground6": "#c75af3",
		"editorBracketHighlight.unexpectedBracket.foreground": "#FF1277",
		"editorBracketPairGuide.foreground1": "#2faf64",
		"editorBracketPairGuide.foreground2": "#00b7e4",
		"editorBracketPairGuide.foreground3": "#a8759a",
		"editorBracketPairGuide.foreground4": "#CF9C00",
		"editorBracketPairGuide.foreground5": "#FF5C57",
		"editorBracketPairGuide.foreground6": "#c75af3",
		//
		// Inlay hints
		"editorInlayHint.foreground": "#747474",
		"editorInlayHint.background": "#00000000",
		"editorInlayHint.typeForeground": "#747474",
		"editorInlayHint.typeBackground": "#00000000",
		"editorInlayHint.parameterForeground": "#747474",
		"editorInlayHint.parameterBackground": "#00000000",
		"rust_analyzer.inlayHints.foreground": "#747474",
		"rust_analyzer.inlayHints.background": "#00000000",
		"rust_analyzer.inlayHints.foreground.typeHints": "#747474",
		"rust_analyzer.inlayHints.background.typeHints": "#00000000",
		"rust_analyzer.inlayHints.foreground.chainingHints": "#747474",
		"rust_analyzer.inlayHints.background.chainingHints": "#00000000",
		"rust_analyzer.inlayHints.foreground.parameterHints": "#747474",
		"rust_analyzer.inlayHints.background.parameterHints": "#00000000",
		"editorCodeLens.foreground": "#747474",
		// Debug inlay hints
		//"editor.inlineValuesForeground": "",
		//"editor.inlineValuesBackground": "#00000000",
		//
		// Whitespace and indentation
		"editorWhitespace.foreground": "#CECECE",
		"editorIndentGuide.background": "#CECECE",
		"editorIndentGuide.activeBackground": "#aaa",
		"editorRuler.foreground": "#CECECE",
		//
		// Ghost text
		"editorGhostText.foreground": "#ADB1C2", // Inline completion text.
		//"editorGhostText.border": "",
		//
		// Other
		"editorLink.activeForeground": "#FF1277", // When ctrl+hovering over a symbol.
		"editorLightBulb.foreground": "#ffc104", // Colour of the light-bulb.
		"editorLightBulbAutoFix.foreground": "#ffc104", // ???
		//
		//
		//
		// SNIPPETS [x]
		"editor.snippetTabstopHighlightBackground": "#FF12776a",
		//"editor.snippetTabstopHighlightBorder": "",
		"editor.snippetFinalTabstopHighlightBackground": "#FF12776a",
		//"editor.snippetFinalTabstopHighlightBorder": "",
		//
		// ERRORS/WARNINGS/INFO [x]
		"editorHint.foreground": "#2faf64", // Hint squiggle
		//"editorHint.border": "",
		"editorInfo.foreground": "#00b7e4", // Info squiggle
		//"editorInfo.border": "",
		//"editorInfo.background": "",
		"editorWarning.foreground": "#ff942f", // Warning squiggle
		//"editorWarning.border": "",
		//"editorWarning.background": "",
		"editorError.foreground": "#FF1277", // Error squiggle
		//"editorError.border": "",
		//"editorError.background": "",
		"editorUnnecessaryCode.opacity": "#000000c0", // Unused symbols/text - 75% opacity.
		//"editorUnnecessaryCode.border": "",
		"problemsInfoIcon.foreground": "#00b7e4", // Icons, e.g. symbols in problem panel
		"problemsWarningIcon.foreground": "#ff942f",
		"problemsErrorIcon.foreground": "#FF1277",
		//
		// ERROR LENS [x]
		"errorLens.infoForegroundLight": "#00b7e4",
		"errorLens.infoBackgroundLight": "#00b7e420",
		"errorLens.hintForegroundLight": "#2faf64",
		"errorLens.hintBackgroundLight": "#17a2a220",
		"errorLens.warningForegroundLight": "#ff942f",
		"errorLens.warningBackgroundLight": "#ff942f20",
		"errorLens.errorForegroundLight": "#FF1277",
		"errorLens.errorBackgroundLight": "#FF12771a",
		"errorLens.statusBarIconWarningForeground": "#fff",
		"errorLens.statusBarIconErrorForeground": "#fff",
		"errorLens.statusBarInfoForeground": "#fff",
		"errorLens.statusBarHintForeground": "#fff",
		"errorLens.statusBarWarningForeground": "#fff",
		"errorLens.statusBarErrorForeground": "#fff",
		"errorLens.infoGutterIconColor": "#00b7e4",
		"errorLens.warningGutterIconColor": "#ff942f",
		"errorLens.errorGutterIconColor": "#FF1277",
	},
	"semanticHighlighting": true,
	"semanticTokenColors": {
		// BASICS
		"keyword": "#F767BB",
		"function": "#09A1ED", // Static function.
		"method": "#09A1ED", // Object method.
		"macro": "#09A1ED",
		"variable": "#565869",
		"parameter": {
			"fontStyle": "italic"
		},
		"number": "#FF5C57",
		"boolean": "#2DAE58",
		"*.constant": "#2DAE58",
		"comment": "#ADB1C2",
		"label": "#8cba10", // Rust: `'outer: while`
		"punctuation": "#777777",
		// TYPES
		"builtinType": "#F767BB",
		"type": "#F767BB",
		"struct": "#13BBB7",
		"class": "#13BBB7",
		"enum": "#13BBB7",
		"enumMember": "#2DAE58",
		"union": "#13BBB7",
		"typeAlias": "#13BBB7",
		"selfKeyword": "#F767BB",
		"property": "#a8759a", // Object members.
		// GENERICS
		"typeParameter": "#13BBB7", // Generic type annotation, e.g. `T`
		"interface": "#c75af3", // Rust: `MyTrait`
		"lifetime": "#8cba10", // Rust: `'a`
		// OPERATORS
		"operator": "#777777",
		"arithmetic": "#777777", // `+`, `-`, `*`, `/`
		"logical": "#777777",
		"comparison": "#777777", // `==`, `!=`, `===`
		"bitwise": "#777777",
		"newOperator": "#F767BB",
		"operator.controlFlow": "#F767BB", // Rust: `?`
		// TEXT
		"character": "#FF5C57", // `'b'`
		"string": "#CF9C00", // `"string"`
		"escapeSequence": "#FF5C57", // `\n`
		// OTHER
		"unresolvedReference": {
			"foreground": "#FF1277"
		},
		"variable.mutable": "#565869",
		// RUST
		"method.mutable": {
			"fontStyle": "underline"
		},
		"function.mutable": {
			"fontStyle": "underline"
		},
		// Unset the underline effect, since something like `+=` would otherwise be underlined.
		"arithmetic.mutable": {
			"fontStyle": ""
		},
		// Also unset.
		"bitwise.mutable": {
			"fontStyle": ""
		},
		// param: &mut T
		//"parameter.mutable": {
		//	"fontStyle": "italic underline"
		//},
		"*.unsafe": {
			"fontStyle": "bold"
		},
		"*.mutable.unsafe": {
			"fontStyle": "bold underline"
		},
		"keyword.unsafe": {
			"fontStyle": "bold underline"
		},
		"attribute": "#FF5C57", // The #[]!() symbols in an attribute.
		"parenthesis.attribute": {
			"foreground": "#FF5C57"
		},
		"macro.attribute": "#FF5C57", // `#[derive()]`
		//"macro.attribute.library": "#c75af3", // `Debug`, `Clone` derives, etc.
		"builtinAttribute": "#FF5C57" // `#[inline]`, `#[cfg]`, etc.
	},
	"tokenColors": [
		// BASICS
		{
			// Keywords such as `let`, `var`, `for`, `while`, `class` etc.
			"name": "Keyword, Storage",
			"scope": [
				"keyword",
				"storage.type",
				"storage.modifier",
				"punctuation.definition.directive.c",
				"punctuation.definition.directive.cpp",
				"storage.type.impl.rust",
				"keyword.type.go",
				"storage.class.d",
				"variable.language.super.rust",
				"markup.deleted.git_gutter",
				"entity.name.tag.css",
				"punctuation.definition.keyword.css",
				"entity.name.tag.wildcard.css"
			],
			"settings": {
				"foreground": "#F767BB"
			}
		},
		{
			// Free-standing functions and object methods.
			"name": "Function, Special Method",
			"scope": [
				"entity.name.function",
				"meta.function-call",
				"variable.function",
				"support.function",
				"keyword.other.special-method",
				"keyword.other.common.function"
			],
			"settings": {
				"foreground": "#09A1ED"
			}
		},
		{
			// Macros and other fancy functions.
			"name": "Special functions, Hygienic Macros, etc",
			"scope": [
				"support.function.macro.rust",
				"support.function.macro.builtin.rust",
				"support.function.macro.core.rust",
				"entity.name.type.macro.rust",
				"entity.name.function.macro.rust",
				"entity.name.function.macro.rules.rust",
				"support.function.macro.julia",
				"support.function.builtin.zig"
			],
			"settings": {
				"foreground": "#09A1ED"
			}
		},
		{
			// Variable declarations and uses.
			"name": "Variables",
			"scope": [
				"variable",
				"meta.function-call.arguments",
				"string constant.other.placeholder",
				"meta.function-call.java",
				"storage.modifier.import.java",
				"variable.other.object",
				"variable.other.readwrite"
			],
			"settings": {
				"foreground": "#565869"
			}
		},
		{
			"name": "Punctuation & Operators",
			"scope": [
				"punctuation",
				"keyword.operator",
				"keyword.operator.sigil.rust",
				"keyword.operator.access.dot.rust",
				"keyword.operator.key-value.rust",
				"keyword.operator.attribute.inner.rust",
				"punctuation.definition.tag",
				"punctuation.definition.tag.html",
				"punctuation.definition.tag.begin.html",
				"punctuation.definition.tag.end.html"
			],
			"settings": {
				"foreground": "#777777"
			}
		},
		{
			"name": "Mutable variables",
			"scope": [],
			"settings": {
				"fontStyle": "underline"
			}
		},
		{
			// Function parameters.
			"name": "Parameters",
			"scope": [
				"variable.parameter",
				"keyword.other.self.rust",
				"meta.parens.block.c",
				"variable.css"
				// "meta.function.definition.parameters",
			],
			"settings": {
				"fontStyle": "italic"
			}
		},
		{
			"name": "Comment",
			"scope": [
				"comment",
				"punctuation.definition.comment"
			],
			"settings": {
				"foreground": "#ADB1C2"
			}
		},
		{
			"name": "Constants",
			"scope": [
				"constant.other.caps.rust"
			],
			"settings": {
				"foreground": "#2DAE58"
			}
		},
		{
			"name": "Number",
			"scope": [
				"constant.numeric.decimal.rust",
				"punctuation.separator.dot.decimal.rust"
			],
			"settings": {
				"foreground": "#FF5C57"
			}
		},
		{
			"name": "Attributes",
			"scope": [
				"punctuation.definition.attribute.rust",
				"punctuation.brackets.attribute.rust",
				"keyword.operator.attribute.inner.rust",
				"meta.attribute.rust"
			],
			"settings": {
				"foreground": "#FF5C57"
			}
		},
		// TYPES
		{
			"name": "Built-in Types",
			"scope": [
				"entity.name.type.primitive",
				"entity.name.type.primitive.rust",
				"entity.name.type.numeric.rust",
				"variable.language.self.rust"
			],
			"settings": {
				"foreground": "#F767BB"
			}
		},
		{
			"name": "Class, Support",
			"scope": [
				"support.type",
				"support.class",
				"support.other.namespace.use.php",
				"meta.use.php",
				"support.other.namespace.php",
				"markup.changed.git_gutter",
				"support.type.sys-types",
				"entity.other.attribute-name.table.toml",
				"variable.key.table.toml",
				"storage.type.haskell",
				"storage.type.java",
				"storage.type.primitive.java",
				"storage.type.object.array.java",
				"storage.type.c",
				"storage.type.built-in.c",
				"meta.function.definition.parameters.c",
				"storage.type.built-in.cpp",
				"storage.type.built-in.primitive.cpp",
				"entity.name.class.kotlin",
				"entity.name.type.rust",
				"entity.name.type.struct.rust",
				"storage.type.go",
				"storage.type.boolean.go",
				"storage.type.byte.go",
				"storage.type.error.go",
				"storage.type.numeric.go",
				"storage.type.rune.go",
				"storage.type.string.go",
				"storage.type.uintptr.go",
				"storage.type.concrete.nim",
				"storage.type.basic-type.d",
				"storage.type.d",
				"support.type.python",
				"basicTypes.nim",
				"meta.class.stanza.dune",
				"storage.type.cs",
				"entity.name.type.declaration.rust"
			],
			"settings": {
				"foreground": "#13BBB7"
			}
		},
		{
			"name": "Enum variant, Sum Types, etc",
			"scope": [
				"support.enum.core.rust",
				"entity.name.type.option.rust",
				"entity.name.type.result.rust",
				"constant.other.haskell",
				"variable.other.enummember.cpp"
			],
			"settings": {
				"foreground": "#2DAE58"
			}
		},
		// GENERICS
		{
			"name": "Interfaces",
			"scope": [
				"entity.name.type.trait.rust"
			],
			"settings": {
				"foreground": "#c75af3"
			}
		},
		{
			"name": "Lifetimes",
			"scope": [
				"punctuation.definition.lifetime.rust",
				"entity.name.type.lifetime.rust",
				"storage.modifier.lifetime.rust"
			],
			"settings": {
				"foreground": "#2DAE58"
			}
		},
		// OPERATORS
		{
			"name": "Operator ControlFlow",
			"scope": [
				"keyword.operator.misc.question-mark.rust",
				"keyword.operator.question.rust"
			],
			"settings": {
				"foreground": "#F767BB"
			}
		},
		// TEXT
		{
			"name": "String & character",
			"scope": [
				"string",
				"punctuation.definition.string",
				"constant.other.symbol",
				"constant.other.key",
				"meta.group.braces.curly constant.other.object.key.js string.unquoted.label.js"
			],
			"settings": {
				"foreground": "#CF9C00"
			}
		},
		{
			"name": "Escape Characters",
			"scope": [
				"constant.character.escape"
			],
			"settings": {
				"foreground": "#FF5C57"
			}
		},
		{
			"name": "URL",
			"scope": [
				"*url*",
				"*link*",
				"*uri*"
			],
			"settings": {
				"fontStyle": "underline"
			}
		},
		// OTHER
		{
			"name": "Invalid",
			"scope": [
				"invalid",
				"invalid.illegal"
			],
			"settings": {
				"foreground": "#FF1277"
			}
		},
		//
		// MARKDOWN
		//
		{
			// Normal undecorated text.
			"name": "Markdown - Plain",
			"scope": [
				"text.html.markdown",
				"punctuation.definition.list_item.markdown"
			],
			"settings": {
				"foreground": "#ADB1C2"
			}
		},
		{
			// The `#` symbol in titles.
			"name": "Markdown - Heading Character",
			"scope": [
				"markdown.heading",
				"markup.heading | markup.heading entity.name",
				"markup.heading.markdown punctuation.definition.heading.markdown"
			],
			"settings": {
				"foreground": "#F767BB"
			}
		},
		{
			// The actual text in a title.
			"name": "Markdown - Heading Text",
			"scope": [
				"entity.name.section.markdown"
			],
			"settings": {
				"foreground": "#F767BB"
			}
		},
		{
			"name": "Markup - Bold",
			"scope": [
				"punctuation.definition.bold.markdown",
				"markup.bold",
				"markup.bold string"
			],
			"settings": {
				"fontStyle": "bold",
				"foreground": "#FF5C57"
			}
		},
		{
			"name": "Markup - Italic",
			"scope": [
				"punctuation.definition.italic.markdown",
				"markup.italic"
			],
			"settings": {
				"fontStyle": "italic",
				"foreground": "#09A1ED"
			}
		},
		{
			"name": "Markup - Bold-Italic",
			"scope": [
				"markup.bold markup.italic",
				"markup.italic markup.bold",
				"markup.quote markup.bold",
				"markup.bold markup.italic string",
				"markup.italic markup.bold string",
				"markup.quote markup.bold string"
			],
			"settings": {
				"foreground": "#13BBB7",
				"fontStyle": "italic bold"
			}
		},
		{
			"name": "Markdown - Quote",
			"scope": [
				"punctuation.definition.quote.begin.markdown",
				"markup.quote.markdown"
			],
			"settings": {
				"foreground": "#c75af3",
				"fontStyle": "italic"
			}
		},
		{
			// Inline code block text.
			"name": "Markdown - Markup Raw Inline",
			"scope": [
				"punctuation.definition.raw.markdown",
				"markup.inline.raw.string.markdown"
			],
			"settings": {
				"foreground": "#565869"
			}
		},
		{
			// Fenced code block text.
			"name": "Markdown - Raw Block Fenced",
			"scope": [
				"markup.fenced_code.block.markdown"
			],
			"settings": {
				"foreground": "#565869"
			}
		},
		{
			// The language identifier in a fenced code block, e.g. ```rust
			"name": "Markdown - Raw Block Language Identifier",
			"scope": [
				"fenced_code.block.language.markdown"
			],
			"settings": {
				"foreground": "#F767BB"
			}
		},
		{
			"name": "Markdown - Separator",
			"scope": [
				"meta.separator.markdown"
			],
			"settings": {
				"foreground": "#565869",
				"fontStyle": "bold"
			}
		},
		{
			// The `1.` or `-` or `*` symbols in a list entry.
			"name": "Markdown - List",
			"scope": [
				"punctuation.definition.list.begin.markdown"
			],
			"settings": {
				"foreground": "#565869"
			}
		},
		{
			// Text comment/description around a link, e.g. `[Go to this link](...)`, or `[](... "some website")`
			"name": "Markup - Url String",
			"scope": [
				"punctuation.definition.string.begin.markdown",
				"punctuation.definition.string.end.markdown",
				"string.other.link.description.title.markdown",
				"string.other.link.description.markdown",
				"string.other.link.title.markdown"
			],
			"settings": {
				"foreground": "#2DAE58"
			}
		},
		{
			// The url part of the link.
			"name": "Markup - Url Underline",
			"scope": [
				"markup.underline.link",
				"constant.other.reference.link.markdown"
			],
			"settings": {
				"foreground": "#565869",
				"fontStyle": "underline"
			}
		}
	]
}